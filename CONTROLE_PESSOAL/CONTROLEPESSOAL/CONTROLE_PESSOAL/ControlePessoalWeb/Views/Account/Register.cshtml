@model ControlePessoalWeb.Models.RegisterViewModel
@{
    ViewBag.Title = "Registre-se";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Crie uma nova conta.</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.Nome, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Nome, new { @class = "form-control" })
        </div>
    </div>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DataNasc, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.DataNasc, new { htmlAttributes = new { @class = "form-control", @id = "nascimento" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EstadoCivil, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("EstadoCivil", new List<SelectListItem>
            {
                new SelectListItem{ Text="Solteiro",   Value = "1" },
                new SelectListItem{ Text="Casado",     Value = "2" },
                new SelectListItem{ Text="Separado",   Value = "3" },
                new SelectListItem{ Text="Divorciado", Value = "4" },
                new SelectListItem{ Text="Viúvo",      Value = "5" },
             }, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Telefone, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Telefone, new { htmlAttributes = new { @class = "form-control", @id = "telefone" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Celular, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Celular, new { htmlAttributes = new { @class = "form-control", @id = "celular" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Cep, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Cep, new { htmlAttributes = new { @class = "form-control", @id = "cep" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Endereco, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Endereco, new { htmlAttributes = new { @class = "form-control", @id = "rua" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Bairro, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Bairro, new { htmlAttributes = new { @class = "form-control", @id = "bairro" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Numero, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Numero, new { htmlAttributes = new { @class = "form-control", @id = "numero" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Cidade, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Cidade, new { htmlAttributes = new { @class = "form-control", @id = "cidade" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Uf, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("Uf", new List<SelectListItem>
            {
                new SelectListItem{ Text=""  ,                       Value = "" },
                new SelectListItem{ Text="Acre (AC)",                Value = "AC" },
                new SelectListItem{ Text="Alagoas (AL)",             Value = "AL" },
                new SelectListItem{ Text="Amapá (AP)",               Value = "AP" },
                new SelectListItem{ Text="Amazonas (AM)",            Value = "AM" },
                new SelectListItem{ Text="Bahia (BA)",               Value = "BA" },
                new SelectListItem{ Text="Ceará (CE)",               Value = "CE" },
                new SelectListItem{ Text="Distrito Federal (DF)",    Value = "DF" },
                new SelectListItem{ Text="Goiás (GO)",               Value = "GO" },
                new SelectListItem{ Text="Maranhão (MA)",            Value = "MA" },
                new SelectListItem{ Text="Mato Grosso (MT)",         Value = "MT" },
                new SelectListItem{ Text="Mato Grosso do Sul (MS)",  Value = "MS" },
                new SelectListItem{ Text="Minas Gerais (MG)",        Value = "MG" },
                new SelectListItem{ Text="Pará (PA)",                Value = "PA" },
                new SelectListItem{ Text="Paraíba (PB)",             Value = "PB" },
                new SelectListItem{ Text="Paraná (PR)",              Value = "PR" },
                new SelectListItem{ Text="Pernambuco (PE)",          Value = "PE" },
                new SelectListItem{ Text="Piauí (PI)",               Value = "PI" },
                new SelectListItem{ Text="Rio de Janeiro (RJ)",      Value = "RJ" },
                new SelectListItem{ Text="Rio Grande do Norte (RN)", Value = "RN" },
                new SelectListItem{ Text="Rio Grande do Sul (RS)",   Value = "RS" },
                new SelectListItem{ Text="Rondônia (RO)",            Value = "RO" },
                new SelectListItem{ Text="Roraima (RR)",             Value = "RR" },
                new SelectListItem{ Text="Santa Catarina (SC)",      Value = "SC" },
                new SelectListItem{ Text="São Paulo (SP)",           Value = "SP" },
                new SelectListItem{ Text="Sergipe (SE)",             Value = "SE" },
                new SelectListItem{ Text="Tocantins (TO)",           Value = "TO" },
             }, new { @class = "form-control", @id = "uf" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Complemento, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Complemento, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Registrar-se" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#telefone").inputmask("mask", { "mask": "(99) 9999-9999" });
            $("#celular").inputmask("mask", { "mask": "(99) 9999-99999" });
            $("#cep").inputmask("mask", { "mask": "99999-999" });
            $("#nascimento").inputmask("mask", { "mask": "99/99/9999" });
        });
    </script>
    <!-- Adicionando Javascript -->
    <script type="text/javascript">

        $(document).ready(function () {

            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#rua").val("");
                $("#bairro").val("");
                $("#cidade").val("");
                $("#uf").val("");
                $("#ibge").val("");
            }

            //Quando o campo cep perde o foco.
            $("#cep").blur(function () {

                //Nova variável "cep" somente com dígitos.
                var cep = $(this).val().replace(/\D/g, '');

                //Verifica se campo cep possui valor informado.
                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#rua").val("...");
                        $("#bairro").val("...");
                        $("#cidade").val("...");
                        $("#uf").val("...");
                        $("#ibge").val("...");

                        //Consulta o webservice viacep.com.br/
                        $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#rua").val(dados.logradouro);
                                $("#bairro").val(dados.bairro);
                                $("#cidade").val(dados.localidade);
                                $("#uf").val(dados.uf);
                                $("#ibge").val(dados.ibge);
                            } //end if.
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    } //end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }
            });
        });

    </script>
}
